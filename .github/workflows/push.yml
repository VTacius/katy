name: Lanzamiento
on:
  push:
    tags:
      - 'v*'

jobs:
  lanzamiento:
    name: Lanzamiento de la nueva versión

    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Activando el repositorio
      uses: actions/checkout@v2

    - name: Crear el lanzamiento
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Lanzamiento ${{ github.ref }}
        draft: true
        prerelease: false

  construccion:
    name: Construcción del paquete

    runs-on: ubuntu-latest

    needs: lanzamiento

    steps:
    - name: Activando el repositorio
      uses: actions/checkout@v3

    - name: Configurando Go 
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Corriendo test
      run: go test -v 

    - name: Nombre de repositorio para nombre de aplicación
      id: nombre
      run: |
        echo "::set-output name=app::${GITHUB_REPOSITORY##*/}"
        echo "::set-output name=version::${GITHUB_REF##*/}"
    
    - name: Construyendo la aplicacion
      run: go build -v -o ${{steps.nombre.outputs.app}}

    - name: Empaquetando
      run: |
        tar -czvf ${{steps.nombre.outputs.app}}-${{steps.nombre.outputs.version}}.tgz ${{steps.nombre.outputs.app}}

    - name: Subir los extra
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.lanzamiento.outputs.upload_url }} 
        asset_path: ./${{steps.nombre.outputs.app}}-${{steps.nombre.outputs.version}}.tgz
        asset_name: ${{steps.nombre.outputs.app}}-${{steps.nombre.outputs.version}}.tgz
        asset_content_type: application/gzip
